openapi: 3.0.0
info:
  title: DGTC API
  description: REST Api for Auth & Books CRUD.
  version: 1.0 

servers:
  - url: http://localhost:3000/
    description: Local server 
  - url: https://dgtc-task.vercel.app/
    description: Production server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

paths:
  /api/auth/register:
    post:
      tags:
        - Auth
      summary: Register a new user
      description: We can register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
                role:
                  type: string
                  enum: [ADMIN, USER] # Optional role, values can be ADMIN or USER
                  default: USER
              required:
                - name
                - email
                - password
      responses:
        '201':
          description: Successfully register
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      bookId:
                        type: integer
                  status:
                    type: integer

  /api/auth/login:
    post:
      tags:
        - Auth
      summary: Login a new user
      description: We can login existing user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '200':
          description: Successfully login
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      bookId:
                        type: integer
                  status:
                    type: integer

  /api/auth/logout:
    get:
      tags:
        - Auth
      summary: Logout a new user
      description: We can logout existing user
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successfully logout
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      bookId:
                        type: integer
                  status:
                    type: integer

  /api/auth/me:
    get:
      tags:
        - Auth
      summary: Get logged in user detail
      description: We can get logged in user details
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successfully get me
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      bookId:
                        type: integer
                  status:
                    type: integer
      
  /api/books/:
    get:
      tags: 
        - Books
      summary: Get books
      security:
        - bearerAuth: []
      responses: 
        '200':
          description: OK

    post:
      tags:
        - Books
      summary: Add a book
      description: Add a new book to the library
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                authors:
                  type: array
                  items:
                    type: string
                isbn:
                  type: string
                genre:
                  type: string
                publicationYear:
                  type: string
                price:
                  type: number
                quantity:
                  type: number
                description:
                  type: string
              required:
                - title
                - authors
                - isbn
                - genre
                - publicationYear
                - price
                - quantity
                - description
      responses:
        '201':
          description: Book added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      bookId:
                        type: integer
                  status:
                    type: integer

  /api/books/{bookId}:
    get:
      tags:
        - Books
      summary: Get book details
      description: Get details of a specific book
      security:
        - bearerAuth: []
      parameters:
        - name: bookId
          in: path
          description: Book Id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Book details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  title:
                    type: string
                  authors:
                    type: array
                    items:
                      type: string
                  genre:
                    type: string
                  publicationYear:
                    type: string
                  price:
                    type: number
                  quantity:
                    type: number
                  description:
                    type: string

    patch:
      tags:
        - Books
      summary: Update a book
      description: Update details of a specific book (excluding ISBN)
      security:
        - bearerAuth: []
      parameters:
        - name: bookId
          in: path
          description: Book Id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                authors:
                  type: array
                  items:
                    type: string
                genre:
                  type: string
                publicationYear:
                  type: string
                price:
                  type: number
                quantity:
                  type: number
                description:
                  type: string
      responses:
        '200':
          description: Book updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      bookId:
                        type: integer
                  status:
                    type: integer

    delete:
      tags:
        - Books
      summary: Delete a book
      description: Delete a specific book
      security:
        - bearerAuth: []
      parameters:
        - name: bookId
          in: path
          description: Book Id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Book deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: integer
